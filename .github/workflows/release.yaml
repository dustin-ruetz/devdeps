# Adapted from "GitHub Actions - `.github/workflows/release.yml` configuration for Node projects" CI configuration recipe:
# https://semantic-release.gitbook.io/semantic-release/recipes/ci-configurations/github-actions#github-workflows-release.yml-configuration-for-node-projects

# To test this `release` GitHub Action workflow locally:
# 1. Prerequisite 1: Have `act` installed.
# 2. Prerequisite 2: Generate a temporary GitHub Personal Access Token (PAT).
#    - Navigate to the https://github.com/settings/tokens page.
#    - Name the PAT `TEMP_DR_DEVDEPS_GITHUB_TOKEN`.
#    - Configure the token to have the `repo` and `write:packages` scopes.
#    - Copy the resulting `ghp_...` token value and store it in 1Password as an item in the "SA - Repos_GitHub" vault.
#    - Temporarily change `${{ secrets.GITHUB_TOKEN }}` to `${{ steps.op-credentials.outputs.TEMP_DR_DEVDEPS_GITHUB_TOKEN }}`.
# 3. Prerequisite 3: Temporarily pass the `--dry-run` flag following the `npx semantic-release` command.
# 4. Use the `npm run gha:release` command (passing the `OP_SERVICE_ACCOUNT_TOKEN` secret when prompted) to perform a dry-run of the release.
# 5. Delete the `TEMP_DR_DEVDEPS_GITHUB_TOKEN` PAT and revert the temporary changes to this file after local testing is completed.

name: release
on:
  push:
    # TODO: This `branches` array is for testing purposes; replace branch with "main" before merging this PR.
    branches: [configure-semantic-release]
  # Specify that this workflow depends on the workflow(s) below completing successfully.
  workflow_run:
    workflows: [build-check-test]
    types: [completed]
permissions:
  contents: read # To be able to Git checkout the repository.
jobs:
  release:
    runs-on: ubuntu-latest
    permissions:
      contents: write # To be able to publish a GitHub release.
      issues: write # To be able to comment on released issues.
      pull-requests: write # To be able to comment on released pull requests.
      id-token: write # To enable use of OIDC for NPM provenance.
    steps:
      - name: Load secrets from 1Password
        id: op-credentials
        uses: 1password/load-secrets-action@v2
        with:
          export-env: false
          unset-previous: true
        env:
          # https://github.com/dustin-ruetz/dr-devdeps/settings/secrets/actions
          OP_SERVICE_ACCOUNT_TOKEN: ${{ secrets.OP_SERVICE_ACCOUNT_TOKEN }}
          # Human-readable 1Password CLI secret reference - 'op://SA - Repos_GitHub/dr-devdeps/$FIELD_LABEL'
          TEMP_DR_DEVDEPS_GITHUB_TOKEN: "op://yhyrnlsxmxerazmg3j2rvjxzpq/bws336u3hgbaf4y6zszsiw4xw4/TEMP_DR_DEVDEPS_GITHUB_TOKEN"
          DR_DEVDEPS_NPM_TOKEN: "op://yhyrnlsxmxerazmg3j2rvjxzpq/bws336u3hgbaf4y6zszsiw4xw4/DR_DEVDEPS_NPM_TOKEN"
      - name: Git checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          # Specify the Node.js version by referencing the .node-version file that's located in the root of the repo.
          node-version-file: .node-version
      - name: Install dependencies and build library
        run: npm clean-install
      # Verify the integrity of provenance attestations and registry signatures for installed dependencies.
      - name: Audit dependency signatures
        run: npm audit signatures
      - name: Release package
        # semantic-release requires specific key names for environment variables.
        # https://semantic-release.gitbook.io/semantic-release/usage/ci-configuration#authentication
        env:
          GITHUB_TOKEN: ${{ steps.op-credentials.outputs.TEMP_DR_DEVDEPS_GITHUB_TOKEN }}
          # GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          NPM_TOKEN: ${{ steps.op-credentials.outputs.DR_DEVDEPS_NPM_TOKEN }}
        run: npx semantic-release --dry-run --extends ./lib/semantic-release.config.cjs
